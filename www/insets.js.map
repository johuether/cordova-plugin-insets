{"version":3,"file":"insets.js","sources":["../src/www/Insets.ts","../src/www/InsetType.ts"],"sourcesContent":["/*\n   Copyright 2022 Total Pave Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\nimport { InsetType } from './InsetType';\n\nexport interface IInsetsAPI {\n    addListener: (callback: IInsetCallbackFunc) => void;\n    removeListener: (callback: IInsetCallbackFunc) => void;\n    getInsets: () => IInsets;\n}\ndeclare global {\n    interface ITotalpave {\n        Insets: IInsetsAPI;\n    }\n    interface Window {\n        totalpave: ITotalpave;\n    }\n}\n\nexport const SERVICE_NAME: string = \"Insets\";\n\nexport interface IInsets {\n    top: number;\n    right: number;\n    bottom: number;\n    left: number;\n}\n\nexport type IInsetCallbackFunc = (inset: IInsets) => void;\n\nclass InsetsAPI implements IInsetsAPI {\n    private initPromise: Promise<void>;\n    private listeners: Array<Function> = [];\n    private insets: IInsets = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    };\n\n    public async setMask(mask: number): Promise<IInsets> {\n        if (cordova.platformId === 'ios') {\n            return this.insets;\n        }\n\n        return new Promise<IInsets>((resolve, reject) => {\n            let self = this;\n            cordova.exec(\n                (insets: IInsets) => {\n                    self.insets = insets;\n                    resolve(insets);\n                },\n                reject,\n                SERVICE_NAME,\n                \"setMask\",\n                [ mask ]\n            )\n        });\n    }\n\n    /**\n     * Initializes javascript side of the plugin.\n     * \n     * This function is called automatically on deviceready.\n     * @internal\n     */\n    public __init(): Promise<void> {\n        if (this.initPromise) {\n            return this.initPromise;\n        }\n        this.initPromise = new Promise<void>((resolve, reject) => {\n            // no-op on iOS, still installs to iOS so apps don't need to do platform checks.\n            if (cordova.platformId === 'ios') {\n                resolve();\n                return;\n            }\n\n            // Setup promise resolving mechanism.\n            // We don't use the cordova callback functions as they will be called multiple times over the lifespan of an app.\n            let func = () => {\n                resolve();\n                this.removeListener(func);\n            }\n            this.addListener(func);\n\n            // Setup cordova callback.\n            let that = this;\n            cordova.exec(\n                (insets: IInsets) => {\n                    that.insets = insets;\n                    for (let i = 0, listeners = that.listeners.slice(), length = listeners.length; i < length; ++i) {\n                        listeners[i](insets);\n                    }\n                },\n                reject,\n                SERVICE_NAME,\n                \"setListener\",\n                []\n            );\n        });\n    }\n\n    public addListener(callback: IInsetCallbackFunc) {\n        this.listeners.push(callback);\n    }\n\n    public removeListener(callback: IInsetCallbackFunc) {\n        let index = this.listeners.indexOf(callback);\n        if (index === -1) {\n            return;\n        }\n        this.listeners.splice(index, 1);\n    }\n\n    /**\n     * @returns Last emitted insets.\n     */    \n    public getInsets(): IInsets {\n        return this.insets;\n    }\n};\n\nexport const Insets = new InsetsAPI();\n\ndocument.addEventListener('deviceready', function() {\n    Insets.__init();\n});\n","/*\n   Copyright 2022 Total Pave Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n/**\n * An enumeration of Inset Types.\n * These are mapped to android's native WindowInsetsCompat.TYPE\n * \n * See https://developer.android.com/reference/androidx/core/view/WindowInsetsCompat.Type\n * for more information.\n * \n * Note that the native constant values is an implementation detail,\n * therefore the values here isn't a direct mapping, but will be resolved\n * appropriately.\n */\nexport enum InsetType {\n    CAPTION_BAR                 = 1,\n    DISPLAY_CUTOUT              = 1 << 1,\n    IME                         = 1 << 2,\n    MANDATORY_SYSTEM_GESTURES   = 1 << 3,\n    NAVIGATION_BARS             = 1 << 4,\n    STATUS_BARS                 = 1 << 5,\n    SYSTEM_BARS                 = 1 << 6,\n    SYSTEM_GESTURES             = 1 << 7,\n    TAPPABLE_ELEMENT            = 1 << 8\n};\n"],"names":["InsetType"],"mappings":"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"}